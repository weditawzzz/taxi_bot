from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from core.keyboards import language_keyboard  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from core.handlers.driver.vehicle_handlers import get_vehicle_keyboard
from core.services.user_service import UserService  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from core.models import Session, User

router = Router()


async def get_user_language(user_id: int) -> str:
    """–ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user_service = UserService()
        user = await user_service.get_user_by_telegram_id(user_id)
        return user.language if user and user.language else "pl"
    except Exception:
        return "pl"


@router.message(CommandStart())
async def driver_start(message: Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ (–≤–æ–¥–∏—Ç–µ–ª—å):",
        reply_markup=language_keyboard()
    )


@router.callback_query(F.data.startswith("lang_"))
async def set_driver_language(callback: CallbackQuery):
    lang_code = callback.data.split("_")[1]

    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π UserService
        user_service = UserService()

        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await user_service.get_user_by_telegram_id(callback.from_user.id)

        if not user:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ
            from core.models import UserRole
            user = await user_service.get_or_create_user(
                telegram_id=callback.from_user.id,
                username=callback.from_user.username,
                first_name=callback.from_user.first_name,
                last_name=callback.from_user.last_name,
                role=UserRole.DRIVER
            )

        # –û–±–Ω–æ–≤–ª—è–µ–º —è–∑—ã–∫
        await user_service.update_user_language(callback.from_user.id, lang_code)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —è–∑—ã–∫–∞: {e}")
        # Fallback - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
        with Session() as session:
            user = session.query(User).filter_by(telegram_id=callback.from_user.id).first()
            if not user:
                from core.models import UserRole
                user = User(
                    telegram_id=callback.from_user.id,
                    username=callback.from_user.username,
                    first_name=callback.from_user.first_name,
                    last_name=callback.from_user.last_name,
                    language=lang_code,
                    role=UserRole.DRIVER
                )
                session.add(user)
            else:
                user.language = lang_code
            session.commit()

    await callback.message.edit_text(
        text="üöñ –ü–∞–Ω–µ–ª—å –≤–æ–¥–∏—Ç–µ–ª—è",
        reply_markup=get_vehicle_keyboard(lang_code)
    )