# –û–±–Ω–æ–≤–∏—Ç–µ notifications.py

"""
–°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π –∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
"""
import logging
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config import Config

logger = logging.getLogger(__name__)


async def notify_driver_about_ride(ride_id: int, ride_data: dict):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–æ–¥–∏—Ç–µ–ª—è –æ –Ω–æ–≤–æ–π –ø–æ–µ–∑–¥–∫–µ - –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–û–í–´–ô –°–ï–†–í–ò–°"""
    try:
        from core.services.driver_notification import driver_notification_service

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        await driver_notification_service.notify_all_drivers(ride_id, ride_data)

        logger.info(f"All drivers notified about ride {ride_id} via new service")

    except Exception as e:
        logger.error(f"Error notifying drivers about ride {ride_id}: {e}")


async def notify_client_order_update(user_id: int, message: str):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ —Å –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ú –∑–≤—É–∫–æ–º"""
    try:
        from core.bot_instance import Bots

        # –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –î–õ–Ø –ó–í–£–ö–ê
        await Bots.client.send_message(
            chat_id=user_id,
            text=message,
            parse_mode="HTML",
            disable_notification=False,    # –í–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            protect_content=False,         # –ù–µ –∑–∞—â–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
            disable_web_page_preview=True, # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–≤—å—é
            message_thread_id=None         # –û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞ —á–∞—Ç–∞
        )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è
        try:
            await Bots.client.send_message(
                chat_id=user_id,
                text="üîî",  # –ö–æ–ª–æ–∫–æ–ª—å—á–∏–∫
                disable_notification=False
            )
        except:
            pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏

        logger.info(f"Client {user_id} notified with maximum sound settings")

    except Exception as e:
        logger.error(f"Error notifying client {user_id}: {e}")


async def send_sound_notification(chat_id: int, text: str, bot_instance):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–≤—É–∫–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    try:
        # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∑–≤—É–∫–∞
        await bot_instance.send_message(
            chat_id=chat_id,
            text=text,
            parse_mode="HTML",
            disable_notification=False,
            protect_content=False,
            disable_web_page_preview=True
        )

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç —á–µ—Ä–µ–∑ —Å—Ç–∏–∫–µ—Ä
        try:
            # –°—Ç–∏–∫–µ—Ä-–∑–≤–æ–Ω–æ–∫ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
            await bot_instance.send_sticker(
                chat_id=chat_id,
                sticker="CAACAgIAAxkBAAEMxjJnQVT6R1q-gk0pF9J2AAHfgWG3BgACJgADKA9qFIxUTmr_Zm9lHgQ",
                disable_notification=False
            )
        except:
            # –ï—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–Ω–∞–ª—å–Ω—ã–º —Å–∏–≥–Ω–∞–ª–æ–º
            try:
                await bot_instance.send_message(
                    chat_id=chat_id,
                    text="üîä NOWE ZAM√ìWIENIE! üîä",
                    disable_notification=False
                )
            except:
                pass

    except Exception as e:
        logger.error(f"Error sending sound notification: {e}")


# –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
async def notify_driver(order_id: int):
    """–û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é"""
    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    ride_data = {
        'destination_address': 'Unknown',
        'distance_km': 5.0,
        'estimated_price': 50.0,
        'notes': 'Legacy order'
    }
    await notify_driver_about_ride(order_id, ride_data)