import asyncio
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å Python
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
try:
    from dotenv import load_dotenv

    env_path = os.path.join(current_dir, '.env')
    if os.path.exists(env_path):
        load_dotenv(env_path)
        print(f"‚úÖ Loaded .env file from: {env_path}")
except ImportError:
    print("‚ùå python-dotenv not installed")

try:
    from core.bot_instance import Bots
    from core.config import Config

    print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    exit(1)


async def test_both_drivers():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–±–æ–∏–º –≤–æ–¥–∏—Ç–µ–ª—è–º"""
    try:
        print(f"üîç DRIVER_IDS –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {Config.DRIVER_IDS}")
        print(f"üìû DRIVER_CHAT_ID: {Config.DRIVER_CHAT_ID}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ
        for i, driver_id in enumerate(Config.DRIVER_IDS, 1):
            try:
                print(f"\nüì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç –≤–æ–¥–∏—Ç–µ–ª—é #{i} (ID: {driver_id})")

                await Bots.driver.send_message(
                    chat_id=driver_id,
                    text=f"üß™ <b>–¢–µ—Å—Ç #{i}</b>\n\n"
                         f"–í–æ–¥–∏—Ç–µ–ª—å ID: {driver_id}\n"
                         f"–ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ —ç—Ç–æ - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç!",
                    parse_mode="HTML"
                )
                print(f"‚úÖ –í–æ–¥–∏—Ç–µ–ª—å {driver_id} - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª—è {driver_id}: {e}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
        print(f"\nüöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥—Ä—É–ø–ø–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É...")

        from core.services.driver_notification import driver_notification_service

        success = await driver_notification_service.notify_all_drivers(99999, {
            'pickup_address': '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø–æ–¥–∞—á–∏',
            'destination_address': '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è',
            'distance_km': 5.0,
            'estimated_price': 25.0,
            'passengers_count': 2,
            'order_type': 'city_ride'
        })

        if success:
            print("‚úÖ –ì—Ä—É–ø–ø–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≥—Ä—É–ø–ø–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏")

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    try:
        asyncio.run(test_both_drivers())
    except KeyboardInterrupt:
        print("\nüëã –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞: {e}")